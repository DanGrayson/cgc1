cmake_minimum_required(VERSION 2.8.1)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}")
IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
add_compile_options(-std=c++11 -Wall -Wextra -pedantic-errors -march=native -fexceptions -Wno-unused-value -Wno-invalid-offsetof -Wnonnull -Wno-deprecated-register -Wformat -Wformat-security -fPIC -Wformat-nonliteral -Winit-self -fstack-protector -Wthread-safety -fPIC -fcolor-diagnostics -Werror)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
IF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
SET(CMAKE_CXX_FLAGS_DEBUG "-fstack-protector -g")
SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O3 -g")
SET(CMAKE_CXX_FLAGS_RELEASE "-O3 -g")
add_compile_options(-fPIC -std=c++11 -Wall -Wextra -pedantic-errors -march=native -fexceptions -Wno-unused-value -Wno-invalid-offsetof -Wnonnull -Wformat -Wformat-security -Wformat-nonliteral -Winit-self -Werror)
IF(${CMAKE_CXX_COMPILER} MATCHES ".*clang\\+\\+")
add_compile_options(-Wno-deprecated-register -Wthread-safety -fcolor-diagnostics )
ELSE(${CMAKE_CXX_COMPILER} MATCHES ".*clang\\+\\+")
add_compile_options(-Wno-attributes)
ENDIF(${CMAKE_CXX_COMPILER} MATCHES ".*clang\\+\\+")
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
IF(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
add_compile_options(/W4 /sdl /WX)
ENDIF(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
include_directories(cgc1/include)
add_subdirectory(cgc1)
add_subdirectory(cgc1_test)
add_subdirectory(cgc1_alloc_benchmark)